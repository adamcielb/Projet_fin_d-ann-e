#include <wiringPi.h>
#include <iostream>

#define REED_PIN 0  // GPIO17 sur Raspberry Pi
#define CONVERSION_FACTOR 0.3726  // 1 impulsion ≈ 0.3726 km/h (calculé à partir de la datasheet)

volatile int pulseCount = 0;  // Compteur d'impulsions

// Fonction appelée à chaque front montant (détection 5V)
void pulseDetected() {
    pulseCount++;  // Incrémente le compteur d'impulsions
}

int main() {
    // Initialisation de WiringPi
    if (wiringPiSetup() == -1) {
        std::cerr << "Erreur d'initialisation de WiringPi" << std::endl;
        return 1;
    }

    // Configuration du pin GPIO en entrée avec résistance de pull-up
    pinMode(REED_PIN, INPUT);
    pullUpDnControl(REED_PIN, PUD_UP);

    // Configuration de l'interruption sur front montant
    if (wiringPiISR(REED_PIN, INT_EDGE_RISING, &pulseDetected) < 0) {
        std::cerr << "Erreur : Impossible de configurer l'interruption" << std::endl;
        return 1;
    }

    std::cout << "Mesure de la vitesse du vent... (Ctrl+C pour quitter)" << std::endl;

    // Boucle principale
    while (true) {
        delay(1000);  // Attend 1 seconde (1000 ms)

        // Stocker la valeur actuelle de pulseCount et réinitialiser le compteur
        int currentPulseCount = pulseCount;
        pulseCount = 0;

        // Calcul de la vitesse du vent
        double windSpeed = currentPulseCount * CONVERSION_FACTOR;
        std::cout << "Vitesse du vent : " << windSpeed << " km/h" << std::endl;
    }

    return 0;
}
