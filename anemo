#include <iostream>
#include <wiringPi.h>

#define REED_PIN 0  
const double FACTEUR_MPH = 2.5;      // Facteur d'étalonnage en mph
const double FACTEUR_KMH = 4.0225;   // Facteur d'étalonnage en km/h

volatile int compteur_impulsions = 0;
int nbre_releves = 15;       // Nombre de relevés fixé à 15

void impulsion_detectée() {
    compteur_impulsions++;  
}

int main() {
    wiringPiSetup();
    pinMode(REED_PIN, INPUT);
    pullUpDnControl(REED_PIN, PUD_UP);
    wiringPiISR(REED_PIN, INT_EDGE_FALLING, &impulsion_detectée);

    for (int i = 0; i < nbre_releves; ++i) {
        delay(1000);  // Attendre 1 seconde

        // Calculer la vitesse du vent
        double vitesse_vent_mph = compteur_impulsions * FACTEUR_MPH;
        double vitesse_vent_kmh = compteur_impulsions * FACTEUR_KMH;

        // Afficher la vitesse du vent et le numéro de relevé
        std::cout << "Vent : " << vitesse_vent_mph << " mph | " 
                  << vitesse_vent_kmh << " km/h" << std::endl;
        std::cout << "Relevé numéro : " << (i + 1) << std::endl;

        compteur_impulsions = 0;  // Réinitialiser le compteur d'impulsions
    }

    std::cout << "Nombre de relevés terminé." << std::endl;

    return 0;
}
