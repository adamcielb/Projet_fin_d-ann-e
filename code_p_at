// Inclure les bibliothèques nécessaires
#include <Adafruit_BMP280.h> // Bibliothèque pour le capteur BMP280

// Définir l'adresse I2C du capteur BMP280
#define BMP280_I2C_ADDRESS 0x76

// Créer une instance du capteur BMP280
Adafruit_BMP280 bmp; // (Objet de la bibliothèque Adafruit pour communiquer avec le capteur BMP280)

int main() {
    // Initialiser le capteur BMP280
    if (!bmp.begin(BMP280_I2C_ADDRESS)) { // (bmp.begin : Initialise le capteur avec l'adresse I2C)
        std::cerr << "Impossible de trouver le capteur BMP280. Vérifiez les connexions !" << std::endl;
        return 1; // Retourner une erreur si le capteur n'est pas détecté
    }

    // Configurer le capteur pour la lecture de la pression uniquement
    bmp.setSampling(Adafruit_BMP280::MODE_NORMAL,      // (Mode normal)
                    Adafruit_BMP280::SAMPLING_NONE,    // Pas de lecture de température
                    Adafruit_BMP280::SAMPLING_X16,     // Suréchantillonnage x16 pour la pression
                    Adafruit_BMP280::FILTER_OFF,       // Pas de filtre
                    Adafruit_BMP280::STANDBY_MS_1);    // Temps d'attente 1 ms

    // Lire et afficher 10 relevés de pression
    for (int i = 0; i < 10; i++) {
        // Lire la pression atmosphérique en hPa
        float pressure = bmp.readPressure() / 100.0F; // (bmp.readPressure : Renvoie la pression en Pascals, divisée par 100 pour obtenir hPa)

        // Afficher le relevé de pression
        std::cout << "Relevé " << (i + 1) << ": Pression = " << pressure << " hPa" << std::endl;

        // Attendre 2 secondes avant le prochain relevé
        sleep(2);
    }

    return 0;
}

